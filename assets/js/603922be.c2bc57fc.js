"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[91942],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>g});var a=t(296540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach(function(n){r(e,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),l=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef(function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(t),m=r,g=c["".concat(d,".").concat(m)]||c[m]||p[m]||o;return t?a.createElement(g,i(i({ref:n},u),{},{components:t})):a.createElement(g,i({ref:n},u))});function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},902561:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=t(58168),r=t(198587),o=(t(296540),t(15680)),i=["components"],s={id:"archived_column_indexing",title:"Add and Index Archived Column"},d=void 0,l={unversionedId:"upgrade-notes/archived_column_indexing",id:"upgrade-notes/archived_column_indexing",title:"Add and Index Archived Column",description:"Background",source:"@site/../docs/upgrade-notes/archived_column_indexing.md",sourceDirName:"upgrade-notes",slug:"/upgrade-notes/archived_column_indexing",permalink:"/cumulus/docs/next/upgrade-notes/archived_column_indexing",draft:!1,tags:[],version:"current",lastUpdatedBy:"etcart",lastUpdatedAt:1756490125,formattedLastUpdatedAt:"Aug 29, 2025",frontMatter:{id:"archived_column_indexing",title:"Add and Index Archived Column"},sidebar:"docs",previous:{title:"Upgrade to Terraform 1.12",permalink:"/cumulus/docs/next/upgrade-notes/upgrade-terraform-1.12"},next:{title:"Update granules to include producer_granule_id",permalink:"/cumulus/docs/next/upgrade-notes/update-granules-to-include-producer_granule_id"}},u={},c=[{value:"Background",id:"background",level:2},{value:"Apply Changes in Production Environment",id:"apply-changes-in-production-environment",level:2},{value:"Tools Used",id:"tools-used",level:2},{value:"Upgrade Steps",id:"upgrade-steps",level:2}],p={toc:c},m="wrapper";function g(e){var n=e.components,t=(0,r.A)(e,i);return(0,o.yg)(m,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"background"},"Background"),(0,o.yg)("p",null,"To optimize record searching we are adding a boolean column to archive granules and executions records. these should be btree indexed, adding very little additional size to the database while allowing us to better make the most common queries from the database: getting the most recent records according to a search query."),(0,o.yg)("h2",{id:"apply-changes-in-production-environment"},"Apply Changes in Production Environment"),(0,o.yg)("p",null,"With a large database (e.g. any DAAC production database), these columns and indices should be applied manually to ensure lambda timeouts are not exceeded"),(0,o.yg)("h2",{id:"tools-used"},"Tools Used"),(0,o.yg)("p",null,"Since the update commands can take a few hours to run based on table size and IO throughput, it is recommended that the commands are run in an EC2 instance\nin the AWS environment in a tmux or screen session. This will minimize the number of network hops and potential disconnects between the database client\nand the database. Additionally, this will allow operators applying the patch to check on progress periodically and not worry about credential expiration or\nother issues that would result in the client being killed."),(0,o.yg)("h2",{id:"upgrade-steps"},"Upgrade Steps"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Login into EC2 instance with database access"),(0,o.yg)("p",{parentName:"li"},"From AWS console: Go to EC2, pick a ",(0,o.yg)("inlineCode",{parentName:"p"},"<prefix>-CumulusECSCluster")," instance, click Connect, click Session Manager\nand click the Connect button."),(0,o.yg)("p",{parentName:"li"},"From AWS CLI: aws ssm start-session --target ",(0,o.yg)("inlineCode",{parentName:"p"},"EC2 Instance ID"),"."),(0,o.yg)("admonition",{parentName:"li",title:"Remember to take a note on which instance you run the commands.",type:"note"})),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Install tmux and postgres client"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"sudo yum install -y tmux\n# Amazon Linux 2\nsudo amazon-linux-extras install postgresql17\n# Amazon Linux 2023\nsudo dnf install -y postgresql17\n")),(0,o.yg)("p",{parentName:"li"},"Once installed, a tmux session is started with two windows, the Cumulus database is connected to each window\nusing the PostgreSQL client. The primary window is used for running the ",(0,o.yg)("inlineCode",{parentName:"p"},"CREATE INDEX")," commands, while the secondary\nwindow is used to monitor the database and ",(0,o.yg)("inlineCode",{parentName:"p"},"CREATE INDEX")," statement. The tmux session can be detached from and\nreattached to at a later time.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Run SQL commands"),(0,o.yg)("p",{parentName:"li"},"The database login credentials can be retrieved from the prefix_db_login secret.\nWhen the SQL commands are running, perform step 5 to monitor the commands."),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"tmux new-session -s CumulusUpgrade -n ArchiveIndex\n\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -W\n#e.g. psql -h cumulus-dev-rds-cluster.cluster-xxx.us-east-1.rds.amazonaws.com -p 5432 -d cumulus_test_db -U cumulus_test -W\n\n# Use -f option to run the SQL commands from a file, -o option to write output to file\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -f 20250617190412_add_archived_and_index.sql -W\n")),(0,o.yg)("p",{parentName:"li"},"The following are SQL commands, and  20250617190412_add_archived_and_index.sql is available\n",(0,o.yg)("a",{parentName:"p",href:"https://raw.githubusercontent.com/nasa/cumulus/master/packages/db/src/migrations/20250617190412_add_archived_and_index.sql"},"here"),":"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE granules ADD COLUMN IF NOT EXISTS archived BOOLEAN NOT NULL DEFAULT FALSE;\nALTER TABLE executions ADD COLUMN IF NOT EXISTS archived BOOLEAN NOT NULL DEFAULT FALSE;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS executions_archived_index ON executions (archived);\nCREATE INDEX CONCURRENTLY IF NOT EXISTS granules_archived_index ON granules (archived);\n"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Monitor the running command"),(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre",className:"language-sh"},"# From tmux CumulusUpgrade session, open another window\nCtrl-b c\n\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -W\n\nselect pid, query, state, wait_event_type, wait_event from pg_stat_activity where state = 'active';\n")),(0,o.yg)("p",{parentName:"li"},"These commands should take a few minutes. Tested against a database with 160m granules and 380m executions and a v1 cluster running 32 ACUs, these commands took just under 30 minutes to complete")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Verify the updates"),(0,o.yg)("p",{parentName:"li"}," We can verify that the tables are updated successfully by checking the ",(0,o.yg)("inlineCode",{parentName:"p"},"\\d tablename")," results from psql, the indexes created should be listed."),(0,o.yg)("p",{parentName:"li"}," If the concurrent index query fails for any reason, you may have an ",(0,o.yg)("inlineCode",{parentName:"p"},"invalid")," index - if this occurs,\nmake sure to drop and create the index again to avoid resources being used for the invalid index.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Close the session"),(0,o.yg)("p",{parentName:"li"},"Close the tmux session after the task is complete by ",(0,o.yg)("inlineCode",{parentName:"p"},"exit")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"Ctrl-b x"),"."))))}g.isMDXComponent=!0}}]);
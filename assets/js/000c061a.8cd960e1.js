"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[97156],{12090:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/sqs_message_attribute-f4cac0e790fb9506641e398dca7d3f19.png"},15680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>f});var r=a(96540);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function n(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},u=Object.keys(e);for(r=0;r<u.length;r++)a=u[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)a=u[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=r.createContext({}),i=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,s=e.mdxType,u=e.originalType,l=e.parentName,d=n(e,["components","mdxType","originalType","parentName"]),c=i(a),m=s,f=c["".concat(l,".").concat(m)]||c[m]||p[m]||u;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function f(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var u=a.length,o=new Array(u);o[0]=m;var n={};for(var l in t)hasOwnProperty.call(t,l)&&(n[l]=t[l]);n.originalType=e,n[c]="string"==typeof e?e:s,o[1]=n;for(var i=2;i<u;i++)o[i]=a[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},84899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>f,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var r=a(58168),s=a(98587),u=(a(96540),a(15680)),o=["components"],n={id:"dead_letter_queues",title:"Dead Letter Queues",hide_title:!1},l=void 0,i={unversionedId:"features/dead_letter_queues",id:"features/dead_letter_queues",title:"Dead Letter Queues",description:"startSF SQS queue",source:"@site/../docs/features/lambda_dead_letter_queue.md",sourceDirName:"features",slug:"/features/dead_letter_queues",permalink:"/cumulus/docs/next/features/dead_letter_queues",draft:!1,tags:[],version:"current",lastUpdatedBy:"jennyhliu",lastUpdatedAt:1678406688,formattedLastUpdatedAt:"Mar 10, 2023",frontMatter:{id:"dead_letter_queues",title:"Dead Letter Queues",hide_title:!1},sidebar:"docs",previous:{title:"Cumulus Backup and Restore",permalink:"/cumulus/docs/next/features/backup_and_restore"},next:{title:"Cumulus Dead Letter Archive",permalink:"/cumulus/docs/next/features/dead_letter_archive"}},d={},c=[{value:"startSF SQS queue",id:"startsf-sqs-queue",level:2},{value:"Named Lambda Dead Letter Queues",id:"named-lambda-dead-letter-queues",level:2},{value:"<strong>Default Lambda Configuration</strong>",id:"default-lambda-configuration",level:3},{value:"Troubleshooting/Utilizing messages in a Dead Letter Queue",id:"troubleshootingutilizing-messages-in-a-dead-letter-queue",level:2}],p={toc:c},m="wrapper";function f(e){var t=e.components,n=(0,s.A)(e,o);return(0,u.yg)(m,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,u.yg)("h2",{id:"startsf-sqs-queue"},"startSF SQS queue"),(0,u.yg)("p",null,"The ",(0,u.yg)("a",{parentName:"p",href:"../workflows/workflow-triggers"},"workflow-trigger")," for the startSF queue has a ",(0,u.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-queues-redrivepolicy.html"},"Redrive Policy")," set up that directs any failed attempts to pull from the workflow start queue to a SQS queue ",(0,u.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html"},"Dead Letter Queue"),"."),(0,u.yg)("p",null,"This queue can then be monitored for failures to initiate a workflow.   Please note that workflow failures will not show up in this queue, only repeated failure to trigger a workflow."),(0,u.yg)("h2",{id:"named-lambda-dead-letter-queues"},"Named Lambda Dead Letter Queues"),(0,u.yg)("p",null,"Cumulus provides configured ",(0,u.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html"},"Dead Letter Queues")," (",(0,u.yg)("inlineCode",{parentName:"p"},"DLQ"),") for non-workflow Lambdas (such as ScheduleSF) to capture Lambda failures for further processing."),(0,u.yg)("p",null,"These DLQs are setup with the following configuration:"),(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre",className:"language-hcl"},"  receive_wait_time_seconds  = 20\n  message_retention_seconds  = 1209600\n  visibility_timeout_seconds = 60\n")),(0,u.yg)("h3",{id:"default-lambda-configuration"},(0,u.yg)("strong",{parentName:"h3"},"Default Lambda Configuration")),(0,u.yg)("p",null,"The following built-in Cumulus Lambdas are setup with DLQs to allow handling of process failures:"),(0,u.yg)("ul",null,(0,u.yg)("li",{parentName:"ul"},"dbIndexer (Updates Elasticsearch)"),(0,u.yg)("li",{parentName:"ul"},"JobsLambda (writes logs outputs to Elasticsearch)"),(0,u.yg)("li",{parentName:"ul"},"ScheduleSF (the SF Scheduler Lambda that places messages on the queue that is used to start workflows, see ",(0,u.yg)("a",{parentName:"li",href:"/cumulus/docs/next/workflows/workflow-triggers"},"Workflow Triggers"),")"),(0,u.yg)("li",{parentName:"ul"},"publishReports  (Lambda that publishes messages to the SNS topics for execution, granule and PDR reporting)"),(0,u.yg)("li",{parentName:"ul"},"reportGranules, reportExecutions, reportPdrs (Lambdas responsible for updating records based on messages in the queues published by publishReports)")),(0,u.yg)("h2",{id:"troubleshootingutilizing-messages-in-a-dead-letter-queue"},"Troubleshooting/Utilizing messages in a ",(0,u.yg)("a",{parentName:"h2",href:"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html"},"Dead Letter Queue")),(0,u.yg)("p",null,"Ideally an automated process should be configured to poll the queue and process messages off a dead letter queue."),(0,u.yg)("p",null,"For aid in manually troubleshooting, you can utilize the ",(0,u.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/sqs/home"},"SQS Management console")," to view/messages available in the queues setup for a particular stack.    The dead letter queues will have a Message Body containing the Lambda payload, as well as Message Attributes that reference both the error returned and a RequestID which can be cross referenced to the associated Lambda's CloudWatch logs for more information:"),(0,u.yg)("p",null,(0,u.yg)("img",{alt:"Screenshot of the AWS SQS console showing how to view SQS message attributes",src:a(12090).A,width:"657",height:"553"})))}f.isMDXComponent=!0}}]);
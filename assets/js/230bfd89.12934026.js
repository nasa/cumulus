"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[28099],{15680:(e,r,a)=>{a.d(r,{xA:()=>u,yg:()=>m});var t=a(296540);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),a.push.apply(a,t)}return a}function i(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach(function(r){n(e,r,a[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))})}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=t.createContext({}),s=function(e){var r=t.useContext(c),a=r;return e&&(a="function"==typeof e?e(r):i(i({},r),e)),a},u=function(e){var r=s(e.components);return t.createElement(c.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},h=t.forwardRef(function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(a),h=n,m=d["".concat(c,".").concat(h)]||d[h]||p[h]||o;return a?t.createElement(m,i(i({ref:r},u),{},{components:a})):t.createElement(m,i({ref:r},u))});function m(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[d]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}h.displayName="MDXCreateElement"},168293:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>d});var t=a(58168),n=a(198587),o=(a(296540),a(15680)),i=["components"],l={id:"record_archival",title:"Database Record Archival",hide_title:!1},c=void 0,s={unversionedId:"features/record_archival",id:"version-v21.0.0/features/record_archival",title:"Database Record Archival",description:"This documentation explains the database record archival and associated functionality.",source:"@site/versioned_docs/version-v21.0.0/features/record_archival.md",sourceDirName:"features",slug:"/features/record_archival",permalink:"/cumulus/docs/v21.0.0/features/record_archival",draft:!1,tags:[],version:"v21.0.0",lastUpdatedBy:"Nate Pauzenga",lastUpdatedAt:1757435638,formattedLastUpdatedAt:"Sep 9, 2025",frontMatter:{id:"record_archival",title:"Database Record Archival",hide_title:!1},sidebar:"docs",previous:{title:"Cumulus Change Granule Collections",permalink:"/cumulus/docs/v21.0.0/features/change_granule_collection"},next:{title:"Troubleshooting",permalink:"/cumulus/docs/v21.0.0/category/troubleshooting"}},u={},d=[{value:"Database Record Archive Column",id:"database-record-archive-column",level:2},{value:"Optimized Queries",id:"optimized-queries",level:2},{value:"Performance Parameters of Archival",id:"performance-parameters-of-archival",level:2}],p={toc:d},h="wrapper";function m(e){var r=e.components,a=(0,n.A)(e,i);return(0,o.yg)(h,(0,t.A)({},p,a,{components:r,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This documentation explains the database record archival and associated functionality."),(0,o.yg)("h2",{id:"database-record-archive-column"},"Database Record Archive Column"),(0,o.yg)("p",null,'The cumulus database tables "granules" and "executions" contain a field "archived" which is part of query structure to optimize database search.'),(0,o.yg)("p",null,"A granule or execution will by default be ",(0,o.yg)("inlineCode",{parentName:"p"},"archived=false"),", but once old enough (age set by the DAAC) will be flagged with ",(0,o.yg)("inlineCode",{parentName:"p"},"archived=true"),"."),(0,o.yg)("p",null,"This makes no material difference to the content or state of the record, but does allow a granule or execution search query to access un-archived records more rapidly and at lower cost by eliminating from consideration a majority of records."),(0,o.yg)("h2",{id:"optimized-queries"},"Optimized Queries"),(0,o.yg)("p",null,"Queries can be lodged against the api incorporating this column just like any other db record column. For example, a request to list granules (non-archived) might call the cumulus api-client thusly:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const unArchivedGranules = await listGranules({\n    prefix: 'my_prefix',\n    query: {\n        collectionId: 'COLLECTION1',\n        archived: false,\n        limit: 20,\n        sort_key: ['-updated_at']\n    }\n})\n")),(0,o.yg)("p",null,"This query would ask for the most recent 20 granules from the collection 'COLLECTION1' ",(0,o.yg)("em",{parentName:"p"},"which are not archived"),"."),(0,o.yg)("p",null,"The key reason to do this is performance, a search with ",(0,o.yg)("inlineCode",{parentName:"p"},"archived: false")," will be more performant in cases where records have been archived and therefore removed from these query results."),(0,o.yg)("h2",{id:"performance-parameters-of-archival"},"Performance Parameters of Archival"),(0,o.yg)("p",null,"In testing archived queries against substantially large databases there is one key exception to where these searches against un-archived records are more performant, and that is when querying records right up against the temporal border between archived and un-archived records. the inversely sorted search of the above example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"const unArchivedGranules = await listGranules({\n    prefix: 'my_prefix',\n    query: {\n        collectionId: 'COLLECTION1',\n        archived: false,\n        limit: 20,\n        sort_key: ['updated_at']\n    }\n})\n")),(0,o.yg)("p",null,"will be similar performance or even marginally worse than searching without setting archived: false."))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunk_cumulus_website=self.webpackChunk_cumulus_website||[]).push([[81174],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),u=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},E=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=u(n),E=r,m=p["".concat(d,".").concat(E)]||p[E]||c[E]||s;return n?a.createElement(m,i(i({ref:t},l),{},{components:n})):a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=E;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}E.displayName="MDXCreateElement"},92613:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var a=n(58168),r=n(98587),s=(n(96540),n(15680)),i=["components"],o={id:"update_table_indexes_CUMULUS_3792",title:"Update Table Indexes for CUMULUS-3792",hide_title:!1},d=void 0,u={unversionedId:"upgrade-notes/update_table_indexes_CUMULUS_3792",id:"version-v19.0.0/upgrade-notes/update_table_indexes_CUMULUS_3792",title:"Update Table Indexes for CUMULUS-3792",description:"Background",source:"@site/versioned_docs/version-v19.0.0/upgrade-notes/update-table-indexes-CUMULUS-3792.md",sourceDirName:"upgrade-notes",slug:"/upgrade-notes/update_table_indexes_CUMULUS_3792",permalink:"/cumulus/docs/upgrade-notes/update_table_indexes_CUMULUS_3792",draft:!1,tags:[],version:"v19.0.0",lastUpdatedBy:"Naga Nages",lastUpdatedAt:1724951961,formattedLastUpdatedAt:"Aug 29, 2024",frontMatter:{id:"update_table_indexes_CUMULUS_3792",title:"Update Table Indexes for CUMULUS-3792",hide_title:!1},sidebar:"docs",previous:{title:"Upgrade execution table to CUMULUS-3320",permalink:"/cumulus/docs/upgrade-notes/upgrade_execution_table_CUMULUS_3320"},next:{title:"External Contributions",permalink:"/cumulus/docs/category/external-contributions"}},l={},p=[{value:"Background",id:"background",level:2},{value:"Apply the Changes in Production Environment",id:"apply-the-changes-in-production-environment",level:2},{value:"Tools Used",id:"tools-used",level:2},{value:"Upgrade Steps",id:"upgrade-steps",level:2}],c={toc:p},E="wrapper";function m(e){var t=e.components,n=(0,r.A)(e,i);return(0,s.yg)(E,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"background"},"Background"),(0,s.yg)("p",null,"As part of the ElasticSearch removal efforts, Cumulus API endpoints which previously queried ElasticSearch\nare being updated to query RDS instead.  New database indexes are required to make RDS queries more efficient."),(0,s.yg)("p",null,"The updates will be automatically created as part of the bootstrap lambda function on deployment of the data-persistence module."),(0,s.yg)("p",null,(0,s.yg)("em",{parentName:"p"},"In cases where the indexes are already applied, the updates will have no effect. If you have an existing index with the same definition\nbut a different name than the one we are creating, you can rename your existing index to the new index name.")),(0,s.yg)("h2",{id:"apply-the-changes-in-production-environment"},"Apply the Changes in Production Environment"),(0,s.yg)("p",null,"With a large database (e.g. number of rows in executions table is greater than 100,000), the indexes must be applied manually since\nthe commands can take a significant amount of time and exceed the bootstrap lambda's 15 minute timeout."),(0,s.yg)("h2",{id:"tools-used"},"Tools Used"),(0,s.yg)("p",null,"Since the update commands can take a few hours to run based on table size and IO throughput, it is recommended that the commands are run in an EC2 instance\nin the AWS environment in a tmux or screen session. This will minimize the number of network hops and potential disconnects between the database client\nand the database. Additionally, this will allow operators applying the patch to check on progress periodically and not worry about credential expiration or\nother issues that would result in the client being killed."),(0,s.yg)("h2",{id:"upgrade-steps"},"Upgrade Steps"),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Login into EC2 instance with database access"),(0,s.yg)("p",{parentName:"li"},"From AWS console: Go to EC2, pick a ",(0,s.yg)("inlineCode",{parentName:"p"},"<prefix>-CumulusECSCluster")," instance, click Connect, click Session Manager\nand click the Connect button."),(0,s.yg)("p",{parentName:"li"},"From AWS CLI: aws ssm start-session --target ",(0,s.yg)("inlineCode",{parentName:"p"},"EC2 Instance ID"),"."),(0,s.yg)("admonition",{parentName:"li",title:"Remember to take a note on which instance you run the commands.",type:"note"})),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Install tmux and postgres client"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"sudo yum install -y tmux\nsudo amazon-linux-extras install postgresql13\n")),(0,s.yg)("p",{parentName:"li"},"Once installed, a tmux session is started with two windows, the Cumulus database is connected to each window\nusing the PostgreSQL client. The primary window is used for running the ",(0,s.yg)("inlineCode",{parentName:"p"},"CREATE INDEX")," commands, while the secondary\nwindow is used to monitor the database and ",(0,s.yg)("inlineCode",{parentName:"p"},"CREATE INDEX")," statement. The tmux session can be detached from and\nreattached to at a later time.")),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Run SQL commands"),(0,s.yg)("p",{parentName:"li"},"The database login credentials can be retrieved from the prefix_db_login secret.\nWhen the SQL commands are running, perform step 5 to monitor the commands."),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"tmux new-session -s CumulusUpgrade -n AddIndexes\n\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -W\n#e.g. psql -h cumulus-dev-rds-cluster.cluster-xxx.us-east-1.rds.amazonaws.com -p 5432 -d cumulus_test_db -U cumulus_test -W\n\n# Use -f option to run the SQL commands from a file, -o option to write output to file\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -f 20240728101230_add_table_indexes.sql -W\n")),(0,s.yg)("p",{parentName:"li"},"The following are SQL commands, and 20240728101230_add_table_indexes.sql is available\n",(0,s.yg)("a",{parentName:"p",href:"https://raw.githubusercontent.com/nasa/cumulus/master/packages/db/src/migrations/20240728101230_add_table_indexes.sql"},"here"),":"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-sql"},"SELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS async_operations_updated_at_index ON async_operations(updated_at);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS async_operations_status_operation_type_cumulus_id_index ON async_operations(status, operation_type, cumulus_id);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS collections_updated_at_index ON collections(updated_at);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS executions_updated_at_index ON executions(updated_at);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS executions_status_collection_cumulus_id_index ON executions(status, collection_cumulus_id, cumulus_id);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS files_updated_at_index ON files(updated_at);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS granules_updated_at_index ON granules(updated_at);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS granules_coll_status_processendtime_cumulus_id_index ON granules(collection_cumulus_id, status, processing_end_date_time, cumulus_id);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS granules_status_provider_collection_cumulus_id_index ON granules(status, provider_cumulus_id, collection_cumulus_id, cumulus_id);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS pdrs_updated_at_index ON pdrs(updated_at);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS pdrs_status_provider_collection_cumulus_id_index ON pdrs(status, provider_cumulus_id, collection_cumulus_id, cumulus_id);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS pdrs_execution_cumulus_id_index ON pdrs(execution_cumulus_id);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS pdrs_coll_status_cumulus_id_index ON pdrs(collection_cumulus_id, status, cumulus_id);\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS pdrs_provider_collection_cumulus_id_name_index ON pdrs(provider_cumulus_id, collection_cumulus_id, name);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS providers_updated_at_index ON providers(updated_at);\n\nSELECT CURRENT_TIMESTAMP;\nCREATE INDEX CONCURRENTLY IF NOT EXISTS rules_updated_at_index ON rules(updated_at);\n\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) async_operations;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) collections;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) executions;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) files;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) granules;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) pdrs;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) providers;\nSELECT CURRENT_TIMESTAMP;\nVACUUM (ANALYZE, VERBOSE) rules;\nSELECT CURRENT_TIMESTAMP;\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Monitor the running command"),(0,s.yg)("pre",{parentName:"li"},(0,s.yg)("code",{parentName:"pre",className:"language-sh"},"# From tmux CumulusUpgrade session, open another window\nCtrl-b c\n\npsql -h <Endpoint for writer instance> -p <Port for database or 5432> -d <cumulus database name> -U <database admin user> -W\n\nselect pid, query, state, wait_event_type, wait_event from pg_stat_activity where state = 'active';\n"))),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Verify the updates"),(0,s.yg)("p",{parentName:"li"}," We can verify that the tables are updated successfully by checking the ",(0,s.yg)("inlineCode",{parentName:"p"},"\\d tablename")," results from psql, the indexes created should be listed."),(0,s.yg)("p",{parentName:"li"}," If the concurrent index query fails for any reason, you may have an ",(0,s.yg)("inlineCode",{parentName:"p"},"invalid")," index - if this occurs,\nmake sure to drop and create the index again to avoid resources being used for the invalid index.")),(0,s.yg)("li",{parentName:"ol"},(0,s.yg)("p",{parentName:"li"},"Close the session"),(0,s.yg)("p",{parentName:"li"},"Close the tmux session after the task is complete by ",(0,s.yg)("inlineCode",{parentName:"p"},"exit")," or ",(0,s.yg)("inlineCode",{parentName:"p"},"Ctrl-b x"),"."))))}m.isMDXComponent=!0}}]);